library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(tibble)
library(readr)
av_energy_price_2021_2023 <- read_csv("av-energy-price-2021-2023.csv")
View(av_energy_price_2021_2023)
library(readr)
ev_registrations_by_state_2023 <- read_csv("ev-registrations-by-state-2023.csv")
View(ev_registrations_by_state_2023)
library(readr)
renew_use_2021 <- read_csv("renew-use-2021.csv")
View(renew_use_2021)
library(readr)
renew_use_2022 <- read_csv("renew-use-2022.csv")
View(renew_use_2022)
library(readr)
renew_use_2023 <- read_csv("renew-use-2023.csv")
View(renew_use_2023)
library(readr)
total_use_2021 <- read_csv("total-use-2021.csv")
View(total_use_2021)
library(readr)
total_use_2022 <- read_csv("total-use-2022.csv")
View(total_use_2022)
library(readr)
total_use_2023 <- read_csv("total-use-2023.csv")
View(total_use_2023)
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(tibble)
clean_names <- function(df) {
new_names <- names(df) |>
str_trim() |>
str_replace_all("[^A-Za-z0-9]+", "_") |>
tolower() |>
str_replace_all("^_|_$", "")
names(df) <- new_names
df
}
renew_2023 <- read_csv("renew-use-2023.csv")
total_2023 <- read_csv("total-use-2023.csv")
ev_raw     <- read_csv("ev-registrations-by-state-2023.csv")
renew_2023 <- renew_2023 |> clean_names()
total_2023 <- total_2023 |> clean_names()
ev_raw     <- ev_raw     |> clean_names()
renew_2023.head(10)
renew_2023_clean <-
renew_2023 |>
mutate(
state = toupper(state),
## turn "3404 kWh", "186.0", etc. into numeric
renewable_use_2023_num = as.numeric(
na_if(
str_replace_all(
as.character(renewable_use_2023),
"[^0-9.]",   # keep digits and decimal point, drop everything else
""
),
""             # if result is "", treat as NA
)
)
)
total_2023_long <-
total_2023 |>
pivot_longer(
cols = -energy_source,
names_to = "state",
values_to = "energy_use_2023"
) |>
mutate(
state = toupper(state)
)
total_energy_by_state_2023 <-
total_2023_long |>
group_by(state) |>
summarize(
total_energy_2023 = sum(energy_use_2023, na.rm = TRUE),
.groups = "drop"
)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
rename(
state_full = electric_vehicle_registrations_by_state_2023,
ev_reg_raw = unnamed_1
) |>
mutate(
state_full = str_trim(state_full),
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",   # keep only digits
""
),
""
)
)
)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
rename(
state_full = electric_vehicle_registrations_by_state_2023,
ev_reg_raw = unnamed_1
) |>
mutate(
state_full = str_trim(state_full),
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",   # keep only digits
""
),
""
)
)
)
names(ev_raw)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
select(1, 2) |>
rename(
state_full = 1,
ev_reg_raw = 2
) |>
mutate(
state_full = str_trim(state_full),
## take things like "#13047", "~2697", "7108 EVs"
## keep only digits -> "13047", "2697", "7108"
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",
""
),
""
)
)
)
state_lookup <- tibble(
state_full = c(
"Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut",
"Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois",
"Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts",
"Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada",
"New Hampshire","New Jersey","New Mexico","New York","North Carolina",
"North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island",
"South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia",
"Washington","West Virginia","Wisconsin","Wyoming","Total"
),
state = c(
"AL","AK","AZ","AR","CA","CO","CT",
"DE","DC","FL","GA","HI","ID","IL",
"IN","IA","KS","KY","LA","ME","MD","MA",
"MI","MN","MS","MO","MT","NE","NV",
"NH","NJ","NM","NY","NC",
"ND","OH","OK","OR","PA","RI",
"SC","SD","TN","TX","UT","VT","VA",
"WA","WV","WI","WY","US"
)
)
ev_by_state_2023 <-
ev_tidy |>
left_join(state_lookup, by = "state_full") |>
select(state, ev_registrations_2023)
state_energy_2023 <-
renew_by_state_2023 |>
left_join(total_energy_by_state_2023, by = "state") |>
mutate(
renewable_share_2023 = renewable_total_2023 / total_energy_2023
) |>
left_join(ev_by_state_2023, by = "state")
new_names <- names(df) |>
str_trim() |>
str_replace_all("[^A-Za-z0-9]+", "_") |>
tolower() |>
str_replace_all("^_|_$", "")
names(df) <- new_names
df
clean_names <- function(df) {
new_names <- names(df) |>
str_trim() |>
str_replace_all("[^A-Za-z0-9]+", "_") |>
tolower() |>
str_replace_all("^_|_$", "")
names(df) <- new_names
df
}
renew_2023 <- read_csv("renew-use-2023.csv")
total_2023 <- read_csv("total-use-2023.csv")
ev_raw <- read_csv("ev-registrations-by-state-2023.csv")
renew_2023 <- renew_2023 |> clean_names()
total_2023 <- total_2023 |> clean_names()
ev_raw     <- ev_raw     |> clean_names()
renew_2023_clean <-
renew_2023 |>
mutate(
state = toupper(state),
## turn "3404 kWh", "186.0", etc. into numeric
renewable_use_2023_num = as.numeric(
na_if(
str_replace_all(
as.character(renewable_use_2023),
"[^0-9.]",   # keep digits and decimal point, drop everything else
""
),
""             # if result is "", treat as NA
)
)
)
total_2023_long <-
total_2023 |>
pivot_longer(
cols = -energy_source,
names_to = "state",
values_to = "energy_use_2023"
) |>
mutate(
state = toupper(state)
)
total_energy_by_state_2023 <-
total_2023_long |>
group_by(state) |>
summarize(
total_energy_2023 = sum(energy_use_2023, na.rm = TRUE),
.groups = "drop"
)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
select(1, 2) |>
rename(
state_full = 1,
ev_reg_raw = 2
) |>
mutate(
state_full = str_trim(state_full),
## take things like "#13047", "~2697", "7108 EVs"
## keep only digits -> "13047", "2697", "7108"
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",
""
),
""
)
)
)
state_lookup <- tibble(
state_full = c(
"Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut",
"Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois",
"Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts",
"Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada",
"New Hampshire","New Jersey","New Mexico","New York","North Carolina",
"North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island",
"South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia",
"Washington","West Virginia","Wisconsin","Wyoming","Total"
),
state = c(
"AL","AK","AZ","AR","CA","CO","CT",
"DE","DC","FL","GA","HI","ID","IL",
"IN","IA","KS","KY","LA","ME","MD","MA",
"MI","MN","MS","MO","MT","NE","NV",
"NH","NJ","NM","NY","NC",
"ND","OH","OK","OR","PA","RI",
"SC","SD","TN","TX","UT","VT","VA",
"WA","WV","WI","WY","US"
)
)
ev_by_state_2023 <-
ev_tidy |>
left_join(state_lookup, by = "state_full") |>
select(state, ev_registrations_2023)
state_energy_2023 <-
renew_by_state_2023 |>
left_join(total_energy_by_state_2023, by = "state") |>
mutate(
renewable_share_2023 = renewable_total_2023 / total_energy_2023
) |>
left_join(ev_by_state_2023, by = "state")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(tibble)
clean_names <- function(df) {
new_names <- names(df) |>
str_trim() |>
str_replace_all("[^A-Za-z0-9]+", "_") |>
tolower() |>
str_replace_all("^_|_$", "")
names(df) <- new_names
df
}
ev_raw     <- read_csv("ev-registrations-by-state-2023.csv") |> clean_names()
renew_2023 <- read_csv("renew-use-2023.csv") |> clean_names()
total_2023 <- read_csv("total-use-2023.csv") |> clean_names()
ev_raw     <- read_csv("ev-registrations-by-state-2023.csv") |> clean_names()
names(renew_2023)
renew_2023_clean <-
renew_2023 |>
mutate(
state = toupper(state),
renewable_use_2023_num = as.numeric(
na_if(
str_replace_all(
as.character(renewable_use_2023),
"[^0-9.]",
""
),
""
)
)
)
renew_by_state_2023 <-
renew_2023_clean |>
group_by(state) |>
summarize(
renewable_total_2023 = sum(renewable_use_2023_num, na.rm = TRUE),
.groups = "drop"
)
total_2023_long <-
total_2023 |>
pivot_longer(
cols = -energy_source,
names_to = "state",
values_to = "energy_use_2023"
) |>
mutate(
state = toupper(state)
)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
select(1, 2) |>
rename(
state_full = 1,
ev_reg_raw = 2
) |>
mutate(
state_full = str_trim(state_full),
## take things like "#13047", "~2697", "7108 EVs"
## keep only digits -> "13047", "2697", "7108"
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",
""
),
""
)
)
)
total_energy_by_state_2023 <-
total_2023_long |>
group_by(state) |>
summarize(
total_energy_2023 = sum(energy_use_2023, na.rm = TRUE),
.groups = "drop"
)
ev_tidy <-
ev_raw |>
slice(-(1:2)) |>
select(1, 2) |>
rename(
state_full = 1,
ev_reg_raw = 2
) |>
mutate(
state_full = str_trim(state_full),
ev_registrations_2023 = as.numeric(
na_if(
str_replace_all(
as.character(ev_reg_raw),
"[^0-9]",
""
),
""
)
)
)
state_lookup <- tibble(
state_full = c(
"Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut",
"Delaware","District of Columbia","Florida","Georgia","Hawaii","Idaho","Illinois",
"Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts",
"Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada",
"New Hampshire","New Jersey","New Mexico","New York","North Carolina",
"North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island",
"South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia",
"Washington","West Virginia","Wisconsin","Wyoming","Total"
),
state = c(
"AL","AK","AZ","AR","CA","CO","CT",
"DE","DC","FL","GA","HI","ID","IL",
"IN","IA","KS","KY","LA","ME","MD","MA",
"MI","MN","MS","MO","MT","NE","NV",
"NH","NJ","NM","NY","NC",
"ND","OH","OK","OR","PA","RI",
"SC","SD","TN","TX","UT","VT","VA",
"WA","WV","WI","WY","US"
)
)
ev_by_state_2023 <-
ev_tidy |>
left_join(state_lookup, by = "state_full") |>
select(state, ev_registrations_2023)
state_energy_2023 <-
renew_by_state_2023 |>
left_join(total_energy_by_state_2023, by = "state") |>
mutate(
renewable_share_2023 = renewable_total_2023 / total_energy_2023
) |>
left_join(ev_by_state_2023, by = "state")
state_energy_2023 |>
arrange(desc(renewable_share_2023)) |>
head(10)
state_energy_2023 <-
renew_by_state_2023 |>
left_join(total_energy_by_state_2023, by = "state") |>
mutate(
renewable_share_2023 = renewable_total_2023 / total_energy_2023
) |>
left_join(ev_by_state_2023, by = "state")
renewable_share_2023 = renewable_total_2023 / total_energy_2023
state_energy_2023 <-
state_energy_2023 |>
mutate(
renewable_share_2023 = renewable_total_2023 / total_energy_2023,
ev_per_total_energy_2023 = ev_registrations_2023 / total_energy_2023
)
state_energy_2023 |>
arrange(desc(renewable_share_2023)) |>
select(state, renewable_share_2023, ev_registrations_2023, ev_per_total_energy_2023) |>
head(10)
library(maps)
library(ggplot2)
library(scales)
library(dplyr)
library(tibble)
library(stringr)
us_states_map <- map_data("state")
state_name_lookup <- tibble(
state = state.abb,
region = tolower(state.name)
)
plot_data <-
state_energy_2023 |>
left_join(state_name_lookup, by = "state") |>
filter(!is.na(region))
choropleth_data <-
us_states_map |>
left_join(plot_data, by = "region")
ggplot(choropleth_data,
aes(x = long, y = lat, group = group, fill = renewable_share_2023)) +
geom_polygon(color = "white", linewidth = 0.2) +
coord_fixed(1.3) +
scale_fill_continuous(
name = "Share of total energy\nfrom renewables (2023)",
labels = percent_format(accuracy = 1)
) +
labs(
title = "How Clean is EV Charging by State?",
subtitle = "Darker states get a higher share of their total energy from renewable sources.\nCharging an EV there relies less on fossil fuels.",
caption = "Data: state_energy_2023 (renewable_total_2023 / total_energy_2023)"
) +
theme_void() +
theme(
legend.position = "right",
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(size = 10),
legend.title = element_text(size = 9),
legend.text = element_text(size = 8)
)
